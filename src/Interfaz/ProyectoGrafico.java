/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Habacucc
 */
public class ProyectoGrafico extends javax.swing.JFrame  {
    java.util.LinkedList<Clases.CuentaAhorro> listaAhorro;
    java.util.LinkedList<Clases.CuentaCheques> listaCheques;
    Date Fecha= new Date();
    int Fechadia= Fecha.getDate();
    int Fechames= Fecha.getMonth();
    int Fechaanio= Fecha.getYear();
    int cargado= 0;
    private int limite  = 6 , limite2= 9, limite3= 40, limite4=8;
    

    /**
     * Creates new form ProyectoGrafico
     */
    
    public ProyectoGrafico() {
        super("Banco FCC");
        listaAhorro= new java.util.LinkedList<>();
        listaCheques= new java.util.LinkedList<>();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BarraMenu = new javax.swing.JToolBar();
        BotonCreaAhorro = new javax.swing.JButton();
        BotonCreaCheque = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        BotonCerrar = new javax.swing.JButton();
        EtiquetaNom = new javax.swing.JLabel();
        EtiquetaNum = new javax.swing.JLabel();
        EtiquetaSaldo = new javax.swing.JLabel();
        TextoNom = new javax.swing.JTextField(40);
        TextoNum = new javax.swing.JTextField(6);
        TextoSaldo = new javax.swing.JTextField(9);
        jScrollPane1 = new javax.swing.JScrollPane();
        listAhorro = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        listCheque = new javax.swing.JList();
        EtiquetaAhorro = new javax.swing.JLabel();
        EtiquetaCheques = new javax.swing.JLabel();
        BotonDeposita2 = new javax.swing.JButton();
        TextoDeposita1 = new javax.swing.JTextField();
        BotonRetira2 = new javax.swing.JButton();
        TextoRetira1 = new javax.swing.JTextField();
        BotonEliminaAhorro = new javax.swing.JButton();
        BotonEliminaCheques = new javax.swing.JButton();
        ElimAhorro1 = new javax.swing.JLabel();
        ElimAhorro2 = new javax.swing.JLabel();
        ElimCuenta2 = new javax.swing.JTextField();
        ElimCuenta1 = new javax.swing.JTextField();
        BotonDeposita1 = new javax.swing.JButton();
        BotonRetira1 = new javax.swing.JButton();
        TextoDeposita2 = new javax.swing.JTextField();
        TextoRetira2 = new javax.swing.JTextField();
        BotonGuarda = new javax.swing.JButton();
        BotonCarga = new javax.swing.JButton();
        CampoFecha = new javax.swing.JTextField();
        BotonInteres = new javax.swing.JButton();
        BotonEmitir = new javax.swing.JButton();
        TextoCheq = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setType(java.awt.Window.Type.POPUP);

        BarraMenu.setBackground(new java.awt.Color(204, 204, 204));
        BarraMenu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BarraMenu.setRollover(true);

        BotonCreaAhorro.setForeground(new java.awt.Color(0, 0, 255));
        BotonCreaAhorro.setText("Crear Cuenta Ahorro");
        BotonCreaAhorro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BotonCreaAhorro.setFocusable(false);
        BotonCreaAhorro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCreaAhorro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonCreaAhorro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCreaAhorroActionPerformed(evt);
            }
        });
        BarraMenu.add(BotonCreaAhorro);

        BotonCreaCheque.setForeground(new java.awt.Color(0, 0, 255));
        BotonCreaCheque.setText("Crear Cuenta de Cheques");
        BotonCreaCheque.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BotonCreaCheque.setFocusable(false);
        BotonCreaCheque.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCreaCheque.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonCreaCheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCreaChequeActionPerformed(evt);
            }
        });
        BarraMenu.add(BotonCreaCheque);

        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("Menu Anterior");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        BarraMenu.add(jButton1);

        BotonCerrar.setForeground(new java.awt.Color(0, 0, 255));
        BotonCerrar.setText("Salir");
        BotonCerrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BotonCerrar.setFocusable(false);
        BotonCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCerrarActionPerformed(evt);
            }
        });
        BarraMenu.add(BotonCerrar);

        EtiquetaNom.setText("Nombre");

        EtiquetaNum.setText("Cuenta");

        EtiquetaSaldo.setText("Saldo");

        TextoNom.setBackground(new java.awt.Color(204, 204, 204));
        TextoNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoNomActionPerformed(evt);
            }
        });

        TextoNum.setBackground(new java.awt.Color(204, 204, 204));
        TextoNum.setMaximumSize(new java.awt.Dimension(6, 6));
        TextoNum.setName("");

        TextoSaldo.setBackground(new java.awt.Color(204, 204, 204));

        jScrollPane1.setViewportView(listAhorro);

        jScrollPane2.setViewportView(listCheque);

        EtiquetaAhorro.setForeground(new java.awt.Color(255, 0, 0));
        EtiquetaAhorro.setText("Cuentas de Ahorro");

        EtiquetaCheques.setForeground(new java.awt.Color(255, 0, 0));
        EtiquetaCheques.setText("Cuentas de Cheques");

        BotonDeposita2.setForeground(new java.awt.Color(0, 0, 255));
        BotonDeposita2.setText("DEPOSITAR");
        BotonDeposita2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDeposita2ActionPerformed(evt);
            }
        });

        TextoDeposita1.setBackground(new java.awt.Color(204, 204, 204));

        BotonRetira2.setForeground(new java.awt.Color(0, 0, 255));
        BotonRetira2.setText("RETIRAR");
        BotonRetira2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRetira2ActionPerformed(evt);
            }
        });

        TextoRetira1.setBackground(new java.awt.Color(204, 204, 204));

        BotonEliminaAhorro.setForeground(new java.awt.Color(0, 0, 255));
        BotonEliminaAhorro.setText("Eliminar Cuenta de Ahorro");
        BotonEliminaAhorro.setFocusable(false);
        BotonEliminaAhorro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonEliminaAhorro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonEliminaAhorro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminaAhorroActionPerformed(evt);
            }
        });

        BotonEliminaCheques.setForeground(new java.awt.Color(0, 0, 255));
        BotonEliminaCheques.setText("Eliminar Cuenta de Cheques");
        BotonEliminaCheques.setFocusable(false);
        BotonEliminaCheques.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonEliminaCheques.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonEliminaCheques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminaChequesActionPerformed(evt);
            }
        });

        ElimAhorro1.setText("Ingrese el numero de cuenta de Ahorro:");

        ElimAhorro2.setText("Ingrese el numero de cuenta de Cheques:");

        ElimCuenta2.setBackground(new java.awt.Color(204, 204, 204));

        ElimCuenta1.setBackground(new java.awt.Color(204, 204, 204));

        BotonDeposita1.setForeground(new java.awt.Color(0, 0, 255));
        BotonDeposita1.setText("DEPOSITAR");
        BotonDeposita1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDeposita1ActionPerformed(evt);
            }
        });

        BotonRetira1.setForeground(new java.awt.Color(0, 0, 255));
        BotonRetira1.setText("RETIRAR");
        BotonRetira1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRetira1ActionPerformed(evt);
            }
        });

        TextoDeposita2.setBackground(new java.awt.Color(204, 204, 204));

        TextoRetira2.setBackground(new java.awt.Color(204, 204, 204));

        BotonGuarda.setForeground(new java.awt.Color(0, 0, 255));
        BotonGuarda.setText("GUARDAR CUENTAS");
        BotonGuarda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardaActionPerformed(evt);
            }
        });

        BotonCarga.setForeground(new java.awt.Color(0, 0, 255));
        BotonCarga.setText("CARGAR CUENTAS");
        BotonCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargaActionPerformed(evt);
            }
        });

        CampoFecha.setEditable(false);
        CampoFecha.setForeground(new java.awt.Color(0, 204, 0));
        CampoFecha.setText(Fechadia + "/" + (Fechames+1) + "/" + (Fechaanio+1900));
        CampoFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoFechaActionPerformed(evt);
            }
        });

        BotonInteres.setForeground(new java.awt.Color(0, 0, 255));
        BotonInteres.setText("Abonar Interes");
        BotonInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInteresActionPerformed(evt);
            }
        });

        BotonEmitir.setForeground(new java.awt.Color(0, 0, 255));
        BotonEmitir.setText("Emitir un Cheque");
        BotonEmitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEmitirActionPerformed(evt);
            }
        });

        TextoCheq.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Logo.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(EtiquetaAhorro, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EtiquetaCheques)
                .addGap(202, 202, 202))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(EtiquetaSaldo)
                                            .addComponent(EtiquetaNom)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(EtiquetaNum)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextoNom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextoSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BotonCarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotonGuarda, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CampoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ElimAhorro2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BotonDeposita2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TextoDeposita2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BotonRetira2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TextoRetira2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(BotonEliminaCheques)
                                    .addComponent(ElimCuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BotonEmitir)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TextoCheq, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BarraMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ElimAhorro1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BotonDeposita1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextoDeposita1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BotonRetira1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextoRetira1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BotonEliminaAhorro)
                            .addComponent(ElimCuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonInteres))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BarraMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(CampoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EtiquetaNum)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextoNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BotonGuarda)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonCarga)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(EtiquetaNom)
                                .addComponent(TextoNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EtiquetaSaldo)
                            .addComponent(TextoSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(EtiquetaAhorro, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(EtiquetaCheques)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(ElimAhorro1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ElimCuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonDeposita1)
                            .addComponent(TextoDeposita1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonRetira1)
                            .addComponent(TextoRetira1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(BotonEliminaAhorro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonInteres))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ElimAhorro2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ElimCuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonDeposita2)
                            .addComponent(TextoDeposita2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonRetira2)
                            .addComponent(TextoRetira2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(BotonEliminaCheques)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonEmitir)
                            .addComponent(TextoCheq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19))
        );

        TextoNom.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoNom.getText().length()== limite3)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoNum.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoNum.getText().length()== limite)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoSaldo.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoSaldo.getText().length()== limite2)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoDeposita1.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoDeposita1.getText().length()== limite4)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoRetira1.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoRetira1.getText().length()== limite4)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        ElimCuenta2.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (ElimCuenta2.getText().length()== limite)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        ElimCuenta1.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (ElimCuenta1.getText().length()== limite)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoDeposita2.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoDeposita2.getText().length()== limite4)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoRetira2.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoRetira2.getText().length()== limite4)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });
        TextoCheq.addKeyListener(new KeyListener(){
            public void keyTyped(KeyEvent e)
            {if (TextoCheq.getText().length()== limite4)

                e.consume();

            }
            public void keyPressed(KeyEvent arg0) {
            }
            public void keyReleased(KeyEvent arg0) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*public void Guardar(){
    String ArchivoAhorro = "Ahorro.txt";
    String ArchivoCheques = "Cheques.txt";
        try {

                FileWriter escribe = new FileWriter(ArchivoAhorro);
                BufferedWriter salida = new BufferedWriter(escribe);

                ListIterator itr = listaAhorro.listIterator();
                while (itr.hasNext()) {
                    Clases.CuentaAhorro elemento = (Clases.CuentaAhorro) itr.next();
                    salida.write(elemento + "\n");
                }

                salida.close();
                System.out.println("Archvio creado con exito.");

        } catch (Exception e) {
        }
    }*/
    
    
    public void listarAhorro(){
        javax.swing.DefaultListModel modAhorro;
        modAhorro= new javax.swing.DefaultListModel();
        for (int i=0;i<listaAhorro.size();i++){
            modAhorro.addElement(listaAhorro.get(i).getCuenta() + "    " + listaAhorro.get(i).getCliente() + "   " +  listaAhorro.get(i).getSaldo()+"   " + Fechadia+"/"+(Fechames+1)+"/"+(Fechaanio+1901));
            listAhorro.setModel(modAhorro);
            //listaAhorro.set(0, null);
            
        }
    }
    
    /**
     *
     */
    public void listarCheques(){
        javax.swing.DefaultListModel modCheque;
        modCheque= new javax.swing.DefaultListModel();
        for (int i=0;i<listaCheques.size();i++){
            modCheque.addElement(listaCheques.get(i).getCuenta() + "     " + listaCheques.get(i).getCliente() + "     " + listaCheques.get(i).getSaldo()+"   " + Fechadia+"/"+(Fechames+1)+"/"+(Fechaanio+1901));
            listCheque.setModel(modCheque);
             if(listaCheques.size()==0) {
                 listCheque.setModel(modCheque);
                 listCheque.setModel(null);
            //listaCheques.set(0, null);
        }
    }
    }
    
    private void TextoNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoNomActionPerformed

    private void BotonEliminaAhorroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminaAhorroActionPerformed
        // TODO add your handling code here:
        int i;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta1.getText());
        for (i=0;i<listaAhorro.size();i++){
            if(cuentatemp1==listaAhorro.get(i).getCuenta()) {
                listaAhorro.remove(i);
                break;
            }
        }
        if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        listarAhorro();
        }catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Ingrese el numero de cuenta");
        }
    }//GEN-LAST:event_BotonEliminaAhorroActionPerformed

    private void BotonCreaAhorroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCreaAhorroActionPerformed
        // TODO add your handling code here:
        try{
        int Cuenta=Integer.parseInt(TextoNum.getText());
        float Saldo=Float.parseFloat(TextoSaldo.getText());
        if( TextoNom.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Ingrese el nombre");
            }
        else{
        listaAhorro.add(new Clases.CuentaAhorro(Cuenta, TextoNom.getText(), Saldo, Fechadia, (Fechames+1), (Fechaanio+1901)));
        listarAhorro();
        }}catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Datos incorrectos o incompletos, ingrese los datos correctamente");
        }
    }//GEN-LAST:event_BotonCreaAhorroActionPerformed

    private void BotonCreaChequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCreaChequeActionPerformed
        // TODO add your handling code here:
        try{
        int Cuenta=Integer.parseInt(TextoNum.getText());
        float Saldo=Float.parseFloat(TextoSaldo.getText());
        if(TextoNom.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Ingrese el nombre");
            }
        else{
        listaCheques.add(new Clases.CuentaCheques(Cuenta, TextoNom.getText(), Saldo, Fechadia, (Fechames+1), (Fechaanio+1901)));
        listarCheques();
        }}catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Datos incorrectos o incompletos, ingrese los datos correctamente");
        }
    }//GEN-LAST:event_BotonCreaChequeActionPerformed

    private void BotonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_BotonCerrarActionPerformed

    private void BotonEliminaChequesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminaChequesActionPerformed
        // TODO add your handling code here:
        int k;
        try{
        int cuentatemp2= Integer.parseInt(ElimCuenta2.getText());
        for (k=0;k<listaCheques.size();k++){
            if(cuentatemp2==listaCheques.get(k).getCuenta()) {
                listaCheques.remove(k);
                break; 
            }
        }
        if(k==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        if(listaCheques.size()==0) {
                listaCheques.clear();
            }
        else {
                listarCheques();
            }
        }catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Ingrese el numero de cuenta");
        }
    }//GEN-LAST:event_BotonEliminaChequesActionPerformed

    private void BotonDeposita1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDeposita1ActionPerformed
        // TODO add your handling code here:
        int i;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta1.getText());
        float deposita1= Float.parseFloat(TextoDeposita1.getText());
        if((listaAhorro.size()==0)) {
                JOptionPane.showMessageDialog(this, "No se han creado o cargado cuentas de Ahorros");
            }
        else{
        for(i=0;i<listaAhorro.size();i++) {
            if(cuentatemp1==listaAhorro.get(i).getCuenta()) {
            if(deposita1==0){
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad mayor a cero");
        }
            else if(deposita1<0){
            JOptionPane.showMessageDialog(this, "No puede depositar una cantidad negativa");
        }
            else{
                listaAhorro.get(i).setSaldo((listaAhorro.get(i).getSaldo())+deposita1);
            }
            break;
            }
        }
        if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        listarAhorro();
        }
        }catch(NumberFormatException e1){JOptionPane.showMessageDialog(this, "Ingrese una cantidad y la cuenta en la que desea depositar");
        }
    }//GEN-LAST:event_BotonDeposita1ActionPerformed

    private void BotonRetira1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRetira1ActionPerformed
        // TODO add your handling code here:
        int i;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta1.getText());
        float retira1= Float.parseFloat(TextoRetira1.getText());
        if((listaAhorro.size()==0)) { 
                JOptionPane.showMessageDialog(this, "No se han creado o cargado cuentas de Ahorros");
            }
            
        else {
                for(i=0;i<listaAhorro.size();i++) {
                if(cuentatemp1==listaAhorro.get(i).getCuenta()) {
                        if(retira1==0) {
                        JOptionPane.showMessageDialog(this, "Ingrese una cantidad mayor a cero");
                    }
                        else if(retira1<0) {
                        JOptionPane.showMessageDialog(this, "No puede retirar una cantidad negativa");
                    }
                        else if(listaAhorro.get(i).getSaldo()<retira1){
                                    JOptionPane.showMessageDialog(this, "Saldo Insuficiente");
                        }
                        else{
                listaAhorro.get(i).setSaldo((listaAhorro.get(i).getSaldo())-retira1);
                        }
                        break;
                }
        }
                if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }listarAhorro();
        }
        }catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Ingrese una cantidad y la cuenta de la que desea retirar");
        }
    }//GEN-LAST:event_BotonRetira1ActionPerformed

    private void BotonDeposita2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDeposita2ActionPerformed
        // TODO add your handling code here:
        int i;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta2.getText());
        float deposita1= Float.parseFloat(TextoDeposita2.getText());
        if((listaCheques.size()==0)) {
                JOptionPane.showMessageDialog(this, "No se han creado o cargado cuentas de Cheques");
            }
        else{
        for(i=0;i<listaCheques.size();i++) {
            if(cuentatemp1==listaCheques.get(i).getCuenta()) {
            if(deposita1==0){
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad mayor a cero");
        }
            else if(deposita1<0){
            JOptionPane.showMessageDialog(this, "No puede depositar una cantidad negativa");
        }
            else{
                listaCheques.get(i).setSaldo((listaCheques.get(i).getSaldo())+deposita1);
            }
            break;
            }
        }
        if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        listarCheques();
        }
        }catch(NumberFormatException e1){JOptionPane.showMessageDialog(this, "Ingrese una cantidad y la cuenta en la que desea depositar");
        }
    }//GEN-LAST:event_BotonDeposita2ActionPerformed

    private void BotonRetira2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRetira2ActionPerformed
        // TODO add your handling code here:
        int i;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta2.getText());
        float retira1= Float.parseFloat(TextoRetira2.getText());
        if((listaCheques.size()==0)) {
                JOptionPane.showMessageDialog(this, "No se han creado o cargado cuentas de Cheques");
            }
        else{
        for(i=0;i<listaCheques.size();i++) {
            if(cuentatemp1==listaCheques.get(i).getCuenta()) {
            if(retira1==0){
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad mayor a cero");
        }
            else if(retira1<0){
            JOptionPane.showMessageDialog(this, "No puede retirar una cantidad negativa");
        }
            else if(listaCheques.get(i).getSaldo()<retira1){
        JOptionPane.showMessageDialog(this, "Saldo Insuficiente");
               }
            else{
                listaCheques.get(i).setSaldo((listaCheques.get(i).getSaldo())-retira1);
            }
        break;
        }
        }
        if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        listarCheques();
        }
        }catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Ingrese una cantidad y la cuenta de la que desea retirar");
        }
    }//GEN-LAST:event_BotonRetira2ActionPerformed

    private void BotonGuardaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardaActionPerformed
        // TODO add your handling code here:
    String ArchivoAhorro = "Ahorro.txt";
    String ArchivoAhorro2 = "Ahorro2.txt";
    String ArchivoCheques = "Cheques.txt";
    String ArchivoCheques2 = "Cheques2.txt";
        try {
            if(listaAhorro.size()==0 && listaCheques.size()==0) {
                JOptionPane.showMessageDialog(this, "No hay cuentas a guardar");
            }
            else{
            FileWriter escribea1 = new FileWriter(ArchivoAhorro);
            FileWriter escribec1 = new FileWriter(ArchivoCheques);
            FileWriter escribea2 = new FileWriter(ArchivoAhorro2);
            FileWriter escribec2 = new FileWriter(ArchivoCheques2);
            try (BufferedWriter salidaa1 = new BufferedWriter(escribea1)) {

                ListIterator itr = listaAhorro.listIterator();
                while (itr.hasNext()) {
                    Clases.CuentaAhorro elementoa1 = (Clases.CuentaAhorro) itr.next();
                    salidaa1.write(elementoa1.getCuenta() +"\t"+ elementoa1.getCliente() +"\t"+ elementoa1.getSaldo() + elementoa1.getFechadia() +"/"+ elementoa1.getFechames()+"/"+ elementoa1.getFechaanio()+ "\n\n");
                    salidaa1.newLine();
                }
            }
            try (BufferedWriter salidac1 = new BufferedWriter(escribec1)) {

                ListIterator itr = listaCheques.listIterator();
                while (itr.hasNext()) {
                    Clases.CuentaCheques elementoc1 = (Clases.CuentaCheques) itr.next();
                    salidac1.write(elementoc1.getCuenta() +"\t"+ elementoc1.getCliente() +"\t"+ elementoc1.getSaldo() + elementoc1.getFechadia() +"/"+ elementoc1.getFechames()+"/"+ elementoc1.getFechaanio()+ "\n\n");
                    salidac1.newLine();
                }
            }
            try (BufferedWriter salidaa2 = new BufferedWriter(escribea2)) {

                ListIterator itr = listaAhorro.listIterator();
                while (itr.hasNext()) {
                    Clases.CuentaAhorro elementoa2 = (Clases.CuentaAhorro) itr.next();
                    salidaa2.write(elementoa2.getCuenta() +""+"");// +"\n\n"+ elementoa2.getCliente() +"\n\n"+ elementoa2.getSaldo() + "\n\n");
                    salidaa2.newLine();
                    salidaa2.write(elementoa2.getCliente() +""+"");
                    salidaa2.newLine();
                    salidaa2.write(elementoa2.getSaldo() +""+"");
                    salidaa2.newLine();
                    salidaa2.write(elementoa2.getFechadia() +""+"");
                    salidaa2.newLine();
                    salidaa2.write(elementoa2.getFechames() +""+"");
                    salidaa2.newLine();
                    salidaa2.write(elementoa2.getFechaanio() +""+"");
                    salidaa2.newLine();
                    
                }
            }
            try (BufferedWriter salidac2 = new BufferedWriter(escribec2)) {

                ListIterator itr = listaCheques.listIterator();
                while (itr.hasNext()) {
                    Clases.CuentaCheques elementoc2 = (Clases.CuentaCheques) itr.next();
                    salidac2.write(elementoc2.getCuenta() +""+"");// +"\n\n"+ elementoa2.getCliente() +"\n\n"+ elementoa2.getSaldo() + "\n\n");
                    salidac2.newLine();
                    salidac2.write(elementoc2.getCliente() +""+"");
                    salidac2.newLine();
                    salidac2.write(elementoc2.getSaldo() +""+"");
                    salidac2.newLine();
                    salidac2.write(elementoc2.getFechadia() +""+"");
                    salidac2.newLine();
                    salidac2.write(elementoc2.getFechames() +""+"");
                    salidac2.newLine();
                    salidac2.write(elementoc2.getFechaanio() +""+"");
                    salidac2.newLine();
                }
            }
                /*if(listaAhorro.size()==0 && listaCheques.size()==0){
                    JOptionPane.showMessageDialog(this, "No hay cuentas a guardar");
                }*/
                JOptionPane.showMessageDialog(this, "Se han guardado los archivos con las cuentes de Ahorros y Cheques.");
            }
                }catch (IOException | HeadlessException e) {JOptionPane.showMessageDialog(this, "ERROR");
        }
    }//GEN-LAST:event_BotonGuardaActionPerformed

    private void CampoFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoFechaActionPerformed

    private void BotonCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargaActionPerformed
        // TODO add your handling code here:
      if(cargado==1) {
            JOptionPane.showMessageDialog(null ,"Ya se han cargado las cuentas");
        }
      else{
        try {
      BufferedReader leea1 = new BufferedReader(new FileReader("Ahorro2.txt"));

      String leyendo1,tempcliente1;
      int tempcuent1,tempdia1,tempmes1,tempanio1;
      float tempsaldo1;
      leyendo1=leea1.readLine();
      while(leyendo1 != null) {
                tempcuent1= Integer.parseInt(leyendo1);
                leyendo1= leea1.readLine();
                tempcliente1= leyendo1;
                leyendo1= leea1.readLine();
                tempsaldo1= Float.parseFloat(leyendo1);
                leyendo1= leea1.readLine();
                tempdia1= Integer.parseInt(leyendo1);
                leyendo1= leea1.readLine();
                tempmes1= Integer.parseInt(leyendo1);
                leyendo1= leea1.readLine();
                tempanio1= Integer.parseInt(leyendo1);
                leyendo1= leea1.readLine();
                
                listAhorro.removeAll();
                listaAhorro.add(new Clases.CuentaAhorro(tempcuent1, tempcliente1, tempsaldo1, tempdia1, tempmes1, tempanio1));
            }
    }
    catch(IOException | NumberFormatException e) {
      System.out.println("Exception: " + e);
    }
    
        try {
      BufferedReader leec1 = new BufferedReader(new FileReader("Cheques2.txt"));

      String leyendo2,tempcliente2;
      int tempcuent2,tempdia2,tempmes2,tempanio2;
      float tempsaldo2;
      leyendo2=leec1.readLine();
      while(leyendo2 != null) {
                tempcuent2= Integer.parseInt(leyendo2);
                leyendo2= leec1.readLine();
                tempcliente2= leyendo2;
                leyendo2= leec1.readLine();
                tempsaldo2= Float.parseFloat(leyendo2);
                leyendo2= leec1.readLine();
                tempdia2= Integer.parseInt(leyendo2);
                leyendo2= leec1.readLine();
                tempmes2= Integer.parseInt(leyendo2);
                leyendo2= leec1.readLine();
                tempanio2= Integer.parseInt(leyendo2);
                leyendo2= leec1.readLine();
                
                listCheque.removeAll();
                listaCheques.add(new Clases.CuentaCheques(tempcuent2, tempcliente2, tempsaldo2, tempdia2, tempmes2, tempanio2));
            }
    }
    catch(IOException | NumberFormatException e) {
      System.out.println("Exception: " + e);
    }
        if(listaAhorro.size()==0 && listaCheques.size()==0) {
              JOptionPane.showMessageDialog(this, "Lista de cuentas vacia");
          }
    listarAhorro();
    listarCheques();
    cargado=1;
      }
    }//GEN-LAST:event_BotonCargaActionPerformed

    private void BotonInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInteresActionPerformed
        // TODO add your handling code here:
        int i;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta1.getText());
        float interes;
        if((listaAhorro.size()==0)) {
                JOptionPane.showMessageDialog(this, "No se han creado o cargado cuentas de Ahorros");
            }
        else{
        for(i=0;i<listaAhorro.size();i++) {
            if(cuentatemp1==listaAhorro.get(i).getCuenta()) {
                        if(Fechadia!=1) {
                JOptionPane.showMessageDialog(this, "Solo puede abonar su interes el primer dia del mes");
            }
                        else{
                interes = ((listaAhorro.get(i).getSaldo())*4)/(1000);
                listaAhorro.get(i).setSaldo((listaAhorro.get(i).getSaldo())+interes);
            }
            break;
            }
        }
        if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        listarAhorro();
        }
        }catch(NumberFormatException e1){JOptionPane.showMessageDialog(this, "Ingrese la cuenta en la que desea abonar el interes");
        }
    }//GEN-LAST:event_BotonInteresActionPerformed

    private void BotonEmitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEmitirActionPerformed
        // TODO add your handling code here:
        int i;
        float comision;
        try{
        int cuentatemp1= Integer.parseInt(ElimCuenta2.getText());
        float cheque1= Float.parseFloat(TextoCheq.getText());
        if((listaCheques.size()==0)) {
                JOptionPane.showMessageDialog(this, "No se han creado o cargado cuentas de Cheques");
            }
        else{
        for(i=0;i<listaCheques.size();i++) {
            if(cuentatemp1==listaCheques.get(i).getCuenta()) {
            if(cheque1==0){
            JOptionPane.showMessageDialog(this, "No puede emitir un cheque en ceros");
        }
            else if(cheque1<0){
            JOptionPane.showMessageDialog(this, "No puede emitir un cheque con una cantidad negativa");
        }
            else if(listaCheques.get(i).getSaldo()<cheque1){
        JOptionPane.showMessageDialog(this, "Saldo Insuficiente, se ha cobrado comision por cheque sin fondos");
        comision = ((listaCheques.get(i).getSaldo())*6)/(1000);
        listaCheques.get(i).setSaldo(listaCheques.get(i).getSaldo() - comision);
        listarCheques();
               }
            else{
                listaCheques.get(i).setSaldo((listaCheques.get(i).getSaldo())-cheque1);
                JOptionPane.showMessageDialog(this, "Se ha emitido el cheque correctamente");
            }
        break;
        }
        }
        if(i==listaAhorro.size()){
                JOptionPane.showMessageDialog(this, "Cuenta Erronea o Inexistente");
            }
        listarCheques();
        }
        }catch(NumberFormatException e){JOptionPane.showMessageDialog(this, "Ingrese la cuenta y el monto del Cheque a emitir");
        }
    }//GEN-LAST:event_BotonEmitirActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        Select seleccion= new Select();
        seleccion.setVisible(true);
        this.setVisible(false);
        /*ProyectoGrafico proy=new ProyectoGrafico();
        proy.setVisible(true);
        this.setVisible(false);*/
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ProyectoGrafico().setVisible(true);
            }
        });
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar BarraMenu;
    private javax.swing.JButton BotonCarga;
    private javax.swing.JButton BotonCerrar;
    private javax.swing.JButton BotonCreaAhorro;
    private javax.swing.JButton BotonCreaCheque;
    private javax.swing.JButton BotonDeposita1;
    private javax.swing.JButton BotonDeposita2;
    private javax.swing.JButton BotonEliminaAhorro;
    private javax.swing.JButton BotonEliminaCheques;
    private javax.swing.JButton BotonEmitir;
    private javax.swing.JButton BotonGuarda;
    private javax.swing.JButton BotonInteres;
    private javax.swing.JButton BotonRetira1;
    private javax.swing.JButton BotonRetira2;
    private javax.swing.JTextField CampoFecha;
    private javax.swing.JLabel ElimAhorro1;
    private javax.swing.JLabel ElimAhorro2;
    private javax.swing.JTextField ElimCuenta1;
    private javax.swing.JTextField ElimCuenta2;
    private javax.swing.JLabel EtiquetaAhorro;
    private javax.swing.JLabel EtiquetaCheques;
    private javax.swing.JLabel EtiquetaNom;
    private javax.swing.JLabel EtiquetaNum;
    private javax.swing.JLabel EtiquetaSaldo;
    private javax.swing.JTextField TextoCheq;
    private javax.swing.JTextField TextoDeposita1;
    private javax.swing.JTextField TextoDeposita2;
    private javax.swing.JTextField TextoNom;
    private javax.swing.JTextField TextoNum;
    private javax.swing.JTextField TextoRetira1;
    private javax.swing.JTextField TextoRetira2;
    private javax.swing.JTextField TextoSaldo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listAhorro;
    private javax.swing.JList listCheque;
    // End of variables declaration//GEN-END:variables
}
